package basic.dataStructure;

public class Tree {
    /**
     *      트리와 이진트리(Tree & Binary Tree)
     *
     *      트리(Tree)
     *      계층적인 구조를 표현하기 위한 자료구조로 여러 노드가 한 노드를 가리킬 수 없는 구조를 의미
     *      일반적으로 조직도, 디렉토리 구조등을 생각하면 된다.
     *      스택이나 큐와 같은 선형구조가 아닌 뒤집어 놓은 나무 모양 같은 계층 구조를 가지며
     *      탐색이나 계층적 구조를 가져야 하는 데 많이 사용.
     *
     *      트리의 특징
     *      트리는 노드와 노드들 사이를 이루어주는 링크로 이루어져 있따.
     *      트리의 노드가 n개라면 링크의 개수는 n-1개,
     *      최상위 노드를 루트노드 자식을 가지지 않는 최하위 노드를 리프토드라 한다,
     *
     *     이진트리(Binary Tree)
     *     이진 트리는 최대 2개의 자식 노드를 가질 수 있는 노드를 의미
     *     즉 한개의 노드가 2개의 자식노드를 가지거나 한개를 가지거나 아예 안가질수 있다.
     *
     *     완전 이진트리(Complete Binary Tree)
     *     루트노드를 시작으로 하여 왼쪽에서부터 오른쪽으로 빠지지 않고 채워져 있는 트리
     *
     *     포화이진트리(Full Binary Tree)
     *     포화이진트리는 완전 이진 트리처럼 왼쪽에서 오른쪽으로 채워져있는 노드
     *     차이점은 리프노드를 제외하고 모든 노드들의 차수가 2이며 리프노드는 자식을 가지지 않는다
     *     포와이진트리에서 높이가 h인 경우 노드의 개수는 2ⁿ -1개이다.
     *
     *     포화이진트리와 완전이진트리에서 노드가 n개인 이진트리의 높이는 O(logn)이다
     */
}
