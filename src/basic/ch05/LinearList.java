package basic.ch05;

public class LinearList {
    /**
     *  선형리스트
     *
     *  데이터를 구조화 시키는 가장 기본적인 방법은 나열하는 것
     *
     *  리스트에서 나열한 원소들 간에 순서를 가지고 있는 리스트를 선형리스트(Linear List)
     *  또는 순서 리스트(Ordered List)라 한다.
     *
     *  선형 리스트는 원소들 간의 놀리적인 순서와 메모리에 저장하는 물리적인 순서가 같은 구조로 되어있는데,
     *  이러한 구조를 순차 자료구조라 한다. 따라서 순차 자료구조에서는 원소의 논리적인 순서대로 데이터가 메모리에 연속 저장됟다.
     *
     *  순차 자료구조에서는 원소들이 순서대로 연속하여 저장되기 때문에 시작위치와 원소의 길이를 알면 특정 원소의 위치를 알 수 있다.
     *  시작위치가 a이고, 원소의 길이가 l인 리스트에서  두번째 원소의 위치는 a+l이고, 세번째 원소의 위치는 a+2l이다.
     *  따라서 i번째 원소의 위치는 a+(i-1)*l이 된다.
     *
     *
     *  선형 리스트에서의 원소 삽입
     *
     *  순서대로 연속하여 메모리에 저장되어 있는 선형 리스트에 새로운 원소를
     *  삽입하려면 먼저 삽입할 자리를 만든 후에 그 자리에 원소를 삽입해야 한다.
     *  원소를 삽입할 자리를 만들려면 삽입할 위치 이후에 있는 원소들을 모두 한자리씩 뒤로 밀어야 한다.
     *
     *  (n+1)개의 원소로 이루어진 선형 리스트에서 k번 자리에 원소를 삽입하려면 빈 자리를 만들기 위해 k 번 원소부터 마지막 원소인 n번 원소까지 (n-k+1),
     *  즉 (마지막 원소의 인덱스 - 삽입할 자리의 인덱스 + 1)이 된다
     *
     *  선형 리스트에서의 원소 삭제
     *
     *  선형 리스트에서 원소를 삭제하면 원소가 있던 자리는 빈자리가 되는데,
     *  선형 리스트는 논리 순서와 같은 순서대로 원소들이 메모리에 연속하여 자장되어야 하는 순차 자료구조기 때문에, 중간에 빈자리가 있어서는 안된다.
     *  따라서 원소를 삭제한 위치에 있는 원소들을 모두 한자리씩 앞으로 옮겨서 빈자리를 채워야 한다.
     *
     *  (n+1)개의 원소로 이루어진 선형 리스트에서 k번 자리의 원소를 삭제했을 경우에는 (k+1)번 원소부터 마지막 n번 원소까지 (n-(k+1)+1)개의 원소를 한자리씩 앞으로 이동시켜야 된다.
     *  따라서 필요한 이동횟수는 (n-(k+1)+1) 이 되어 (n-k), 즉 (마지막 원소의 인덱스 - 삭제한 원소의 인덱스)가 된다
     */



    public static void main(String[] args){
        /**
         * 선형리스트의 구현
         *
         * 1차원 배열의 순차 표현
         *
         * 자바 프로그래밍에서 배열의 인덱스는 0부터 시작하므로 배열 sale의 각 원소의 위치는 시작주소가 a일때 a+(인덱스 x 데이터의 크기)
         */
        ex01();


    }

    public static void ex01(){
        System.out.println("분기별 판매량 선형 리스트");
        int sale[] = new int[] {157, 209, 251, 312};

        for(int i = 0; i<sale.length; i++){
            System.out.printf("%d/4분기 : sale[%d] = %d \n",i+1,i,sale[i]);
        }
    }
}
